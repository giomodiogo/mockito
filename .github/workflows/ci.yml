name: CI

on:
  push:
    tags-ignore: [v*]
  pull_request:

jobs:
  
  # 
  # Main build job  
  #
  build:
    runs-on: ubuntu-latest
    
    # Definition of the build matrix
    strategy:
      matrix:
        java: [8, 11, 14]
        mock-maker: ['mock-maker-default', 'mock-maker-inline']
    
    # All build steps
    steps:

      - name: 1. Check out code
        uses: actions/checkout@v2 # https://github.com/actions/checkout
        with:
          fetch-depth: '0' # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci

      - name: 2. Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: 3. Validate Gradle wrapper
        # Run just once, attached to one matrix job
        if: matrix.java == 8 && matrix.mock-maker == 'mock-maker-default'
        uses: gradle/wrapper-validation-action@v1 # https://github.com/gradle/wrapper-validation-action

      - name: 4. Build and check reproducibility of artifacts (single job only)
        # Run on one matrix job, with the version of java used for releases
        if: matrix.java == 8 && matrix.mock-maker == 'mock-maker-default'
        run: ./check_reproducibility.sh

      - name: 5. Spotless check (single job only). Run './gradlew spotlessApply' locally if this job fails.
        # Run on one matrix job, with java version compatible with spotless
        if: matrix.java == 11 && matrix.mock-maker == 'mock-maker-default'
        run: ./gradlew spotlessCheck

      - name: 6. Build on Java ${{ matrix.java }} with ${{ matrix.mock-maker }}
        run: ./gradlew build bintrayUpload idea --scan -PbintrayDryRun
        env:
          MOCK_MAKER: ${{ matrix.mock-maker }}

      - name: 7. Upload coverage report
        run: |
          ./gradlew coverageReport -s --scan && cp build/reports/jacoco/mockitoCoverage/mockitoCoverage.xml jacoco.xml || echo "Code coverage failed"
          bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

  # 
  # Release job, only for pushes to the main branch
  #        
  release:
    runs-on: ubuntu-latest
    needs: [build] # build job must pass before we can release
    if: github.event_name == 'push' && github.ref == 'refs/heads/release/3.x'
    steps:
    - name: Check out code
      uses: actions/checkout@v2 # https://github.com/actions/checkout
      with:
        fetch-depth: '0' # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci
    
    - name: Set up Java 8
      uses: actions/setup-java@v1
      with:
        java-version: 8
    
    - name: Build and publish
      run: ./gradlew bintrayUpload githubRelease --scan
      env:
        GH_WRITE_TOKEN: ${{secrets.GH_WRITE_TOKEN}}
        BINTRAY_API_KEY: ${{secrets.BINTRAY_API_KEY}}
